{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import'./CreatePlan.css';import Navbar from'./Navbar';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CreatePlan(){const[planMode,setPlanMode]=useState(\"\");// 默认选择 AI 模式\nconst[fromCity,setFromCity]=useState('');const[destination,setDestination]=useState(\"\");const[startDate,setStartDate]=useState(\"\");const[endDate,setEndDate]=useState(\"\");//   const [participants, setParticipants] = useState(\"\");\nconst navigate=useNavigate();const isDateValid=new Date(startDate)<=new Date(endDate);const isFormValid=fromCity&&destination&&startDate&&endDate&&isDateValid&&planMode;const handleSubmit=e=>{e.preventDefault();const planData={destination,startDate,fromCity,endDate,// participants,\nplanMode};localStorage.setItem(\"planData\",JSON.stringify(planData));if(planMode===\"ai\"){navigate(\"/aiplan\",{state:planData});}else{navigate(\"/manualplan\",{state:planData});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"create-plan-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Your Trip Plan \"}),/*#__PURE__*/_jsxs(\"form\",{className:\"create-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"From:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"e.g., San Francisco\",value:fromCity,onChange:e=>setFromCity(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"e.g., Paris\",value:destination,onChange:e=>setDestination(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Plan Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"planMode\",value:\"ai\",checked:planMode===\"ai\",onChange:()=>setPlanMode(\"ai\")}),\"Use AI to help plan\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"planMode\",value:\"manual\",checked:planMode===\"manual\",onChange:()=>setPlanMode(\"manual\")}),\"I\\u2019ll plan manually\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSubmit,disabled:!isFormValid,children:\"Next\"})]}),startDate&&endDate&&!isDateValid&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red',fontSize:'0.9rem'},children:\"Start date must be before or equal to end date.\"})]})})]});}export default CreatePlan;","map":{"version":3,"names":["React","useState","useNavigate","Navbar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreatePlan","planMode","setPlanMode","fromCity","setFromCity","destination","setDestination","startDate","setStartDate","endDate","setEndDate","navigate","isDateValid","Date","isFormValid","handleSubmit","e","preventDefault","planData","localStorage","setItem","JSON","stringify","state","children","className","onSubmit","type","placeholder","value","onChange","target","name","checked","onClick","disabled","style","color","fontSize"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/CreatePlan.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './CreatePlan.css';\nimport Navbar from './Navbar';\n\nfunction CreatePlan() {\n  const [planMode, setPlanMode] = useState(\"\"); // 默认选择 AI 模式\n  \n  const [fromCity, setFromCity] = useState('');\n\n  const [destination, setDestination] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n//   const [participants, setParticipants] = useState(\"\");\n  const navigate = useNavigate();\n  const isDateValid = new Date(startDate) <= new Date(endDate);\n  const isFormValid =\n  fromCity && destination && startDate && endDate && isDateValid && planMode;\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const planData = {\n    destination,\n    startDate,\n    fromCity,\n    endDate,\n    // participants,\n    planMode,\n    };\n    localStorage.setItem(\"planData\", JSON.stringify(planData));\n\n    if (planMode === \"ai\") {\n        navigate(\"/aiplan\", { state: planData });\n    } else {\n        navigate(\"/manualplan\", { state: planData });\n    }\n  };\n\n  return (\n    <>\n    <Navbar />\n      <div className=\"create-plan-container\">\n        <div className=\"text-wrapper\">\n        <h1>Create Your Trip Plan </h1>\n\n        <form className=\"create-form\" onSubmit={handleSubmit}>\n\n    <div className=\"form-row\">\n        <label>From:</label>\n        <input type=\"text\" \n               placeholder=\"e.g., San Francisco\" \n               value={fromCity} \n               onChange={(e) => setFromCity(e.target.value)}  />\n    </div>\n  \n    <div className=\"form-row\">\n        <label>To:</label>\n        <input type=\"text\" \n            placeholder=\"e.g., Paris\" \n            value={destination}\n            onChange={(e) => setDestination(e.target.value)}/>\n    </div>\n\n    <div className=\"form-row\">\n        <label>Start Date:</label>\n        <input type=\"date\" \n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}/>\n    </div>\n\n    <div className=\"form-row\">\n        <label>End Date:</label>\n        <input type=\"date\" \n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}/>\n    </div>\n\n    {/* <div className=\"form-row\">\n        <label>Who’s joining?</label>\n        <input type=\"text\" placeholder=\"Enter emails or names\" \n            value={participants}\n            onChange={(e) => setParticipants(e.target.value)}/>\n    </div> */}\n\n    <div className=\"form-row\">\n        <label>Plan Mode:</label>\n        <div className=\"radio-group\">\n        <label>\n        <input\n            type=\"radio\"\n            name=\"planMode\"\n            value=\"ai\"\n            checked={planMode === \"ai\"}\n            onChange={() => setPlanMode(\"ai\")}\n        />\n            Use AI to help plan\n        </label>\n\n        <label>\n        <input\n            type=\"radio\"\n            name=\"planMode\"\n            value=\"manual\"\n            checked={planMode === \"manual\"}\n            onChange={() => setPlanMode(\"manual\")}\n        />\n            I’ll plan manually\n        </label>\n    </div>\n    </div>\n\n    <button type=\"button\" onClick={handleSubmit} disabled={!isFormValid}>\n  Next\n</button>\n\n    </form>\n    {startDate && endDate && !isDateValid && (\n  <p style={{ color: 'red', fontSize: '0.9rem' }}>\n    Start date must be before or equal to end date.\n  </p>\n)}\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default CreatePlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}