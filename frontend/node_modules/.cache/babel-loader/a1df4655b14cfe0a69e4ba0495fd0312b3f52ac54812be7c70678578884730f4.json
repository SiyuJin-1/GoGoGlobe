{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/NotificationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n// useParams 不再需要了：从会话/本地拿 userId 即可\n// import { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\nexport default function NotificationList() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [userId, setUserId] = useState(null);\n\n  // 小工具：统一取 JSON，避免把 HTML 当 JSON 解析\n  const getJSON = async (path, options = {}) => {\n    const res = await fetch(`${API_BASE}${path}`, {\n      credentials: \"include\",\n      ...options\n    });\n    const ct = res.headers.get(\"content-type\") || \"\";\n    if (!ct.includes(\"application/json\")) {\n      const body = await res.text();\n      throw new Error(`Expected JSON, got ${ct}: ${body.slice(0, 120)}…`);\n    }\n    if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n    return res.json();\n  };\n\n  // 统一拿 userId：localStorage -> /api/auth/me\n  useEffect(() => {\n    (async () => {\n      let uid = localStorage.getItem(\"userId\");\n      if (!uid) {\n        try {\n          const r = await fetch(`${API_BASE}/api/auth/me`, {\n            credentials: \"include\"\n          });\n          if (r.ok) {\n            var _d$user;\n            const d = await r.json().catch(() => null);\n            if (d !== null && d !== void 0 && (_d$user = d.user) !== null && _d$user !== void 0 && _d$user.id) {\n              uid = String(d.user.id);\n              localStorage.setItem(\"userId\", uid);\n            }\n          }\n        } catch {}\n      }\n      if (!uid) return; // 未登录\n      setUserId(Number(uid));\n\n      // 拉通知列表\n      try {\n        const data = await getJSON(`/api/notification/user/${uid}`);\n        setNotifications(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error(\"❌ 获取通知失败:\", err);\n        setNotifications([]);\n      }\n    })();\n  }, []);\n  const markAsRead = async notificationId => {\n    try {\n      await fetch(`${API_BASE}/api/notification/${notificationId}/read`, {\n        method: \"PATCH\",\n        credentials: \"include\"\n      });\n      setNotifications(prev => prev.map(n => n.id === notificationId ? {\n        ...n,\n        isRead: true\n      } : n));\n    } catch (err) {\n      console.error(\"❌ 标记为已读失败:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-[#f9fbfd] min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"\\uD83D\\uDD14 \\u901A\\u77E5\\u5217\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), !userId ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-lg\",\n      children: \"\\u8BF7\\u5148\\u767B\\u5F55\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-lg\",\n      children: \"\\u6682\\u65E0\\u901A\\u77E5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: notifications.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-white rounded-2xl shadow-sm border px-6 py-4 transition duration-200 ${n.isRead ? \"border-gray-300\" : \"border-yellow-400 bg-yellow-50\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-base font-medium text-gray-800\",\n            children: n.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500 ml-4 whitespace-nowrap\",\n            children: new Date(n.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), !n.isRead && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(n.id),\n          className: \"mt-4 px-4 py-2 rounded-xl text-white font-semibold hover:opacity-90 transition\",\n          children: \"\\u6807\\u8BB0\\u4E3A\\u5DF2\\u8BFB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationList, \"yEGQynmfQ3C1SLDDZzkEbgDXHHU=\");\n_c = NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","NotificationList","_s","notifications","setNotifications","userId","setUserId","getJSON","path","options","res","fetch","credentials","ct","headers","get","includes","body","text","Error","slice","ok","catch","status","json","uid","localStorage","getItem","r","_d$user","d","user","id","String","setItem","Number","data","Array","isArray","err","console","error","markAsRead","notificationId","method","prev","map","n","isRead","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","message","Date","createdAt","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/NotificationList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n// useParams 不再需要了：从会话/本地拿 userId 即可\n// import { useParams } from \"react-router-dom\";\n\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\n\nexport default function NotificationList() {\n  const [notifications, setNotifications] = useState([]);\n  const [userId, setUserId] = useState(null);\n\n  // 小工具：统一取 JSON，避免把 HTML 当 JSON 解析\n  const getJSON = async (path, options = {}) => {\n    const res = await fetch(`${API_BASE}${path}`, {\n      credentials: \"include\",\n      ...options,\n    });\n    const ct = res.headers.get(\"content-type\") || \"\";\n    if (!ct.includes(\"application/json\")) {\n      const body = await res.text();\n      throw new Error(`Expected JSON, got ${ct}: ${body.slice(0, 120)}…`);\n    }\n    if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n    return res.json();\n  };\n\n  // 统一拿 userId：localStorage -> /api/auth/me\n  useEffect(() => {\n    (async () => {\n      let uid = localStorage.getItem(\"userId\");\n      if (!uid) {\n        try {\n          const r = await fetch(`${API_BASE}/api/auth/me`, { credentials: \"include\" });\n          if (r.ok) {\n            const d = await r.json().catch(() => null);\n            if (d?.user?.id) {\n              uid = String(d.user.id);\n              localStorage.setItem(\"userId\", uid);\n            }\n          }\n        } catch {}\n      }\n      if (!uid) return; // 未登录\n      setUserId(Number(uid));\n\n      // 拉通知列表\n      try {\n        const data = await getJSON(`/api/notification/user/${uid}`);\n        setNotifications(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error(\"❌ 获取通知失败:\", err);\n        setNotifications([]);\n      }\n    })();\n  }, []);\n\n  const markAsRead = async (notificationId) => {\n    try {\n      await fetch(`${API_BASE}/api/notification/${notificationId}/read`, {\n        method: \"PATCH\",\n        credentials: \"include\",\n      });\n      setNotifications((prev) =>\n        prev.map((n) => (n.id === notificationId ? { ...n, isRead: true } : n))\n      );\n    } catch (err) {\n      console.error(\"❌ 标记为已读失败:\", err);\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-[#f9fbfd] min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-6\">🔔 通知列表</h2>\n\n      {!userId ? (\n        <p className=\"text-gray-500 text-lg\">请先登录</p>\n      ) : notifications.length === 0 ? (\n        <p className=\"text-gray-500 text-lg\">暂无通知</p>\n      ) : (\n        <div className=\"space-y-4\">\n          {notifications.map((n) => (\n            <div\n              key={n.id}\n              className={`bg-white rounded-2xl shadow-sm border px-6 py-4 transition duration-200 ${\n                n.isRead ? \"border-gray-300\" : \"border-yellow-400 bg-yellow-50\"\n              }`}\n            >\n              <div className=\"flex justify-between items-start\">\n                <div className=\"text-base font-medium text-gray-800\">{n.message}</div>\n                <div className=\"text-sm text-gray-500 ml-4 whitespace-nowrap\">\n                  {new Date(n.createdAt).toLocaleString()}\n                </div>\n              </div>\n\n              {!n.isRead && (\n                <button\n                  onClick={() => markAsRead(n.id)}\n                  className=\"mt-4 px-4 py-2 rounded-xl text-white font-semibold hover:opacity-90 transition\"\n                >\n                  标记为已读\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}