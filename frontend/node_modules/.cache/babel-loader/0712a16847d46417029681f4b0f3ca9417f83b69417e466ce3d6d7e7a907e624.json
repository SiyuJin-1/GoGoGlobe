{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/AIPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './AIPlan.css';\nimport Navbar from './Navbar';\n\n// // 🧠 提取卡片行程结构\n// function extractCardScheduleFromMarkdown(markdownText) {\n//   const lines = markdownText.split('\\n');\n//   const schedule = [];\n//   let currentDay = null;\n\n//   for (let line of lines) {\n//     const dayMatch = line.match(/^### .*Day\\s*(\\d+):\\s*(.+)$/);\n//     if (dayMatch) {\n//       if (currentDay) schedule.push(currentDay);\n//       currentDay = {\n//         day: `Day ${dayMatch[1]}`,\n//         date: dayMatch[2],\n//         items: []\n//       };\n//     }\n\n//     const sectionMatch = line.match(/^####\\s+\\*\\*(.+?)\\s+\\[(.+?)\\]\\*\\*/);\n//     if (sectionMatch && currentDay) {\n//       currentDay.items.push({\n//         period: sectionMatch[1],\n//         timeRange: sectionMatch[2],\n//         activities: []\n//       });\n//     }\n\n//     const attractionMatch = line.match(/^\\-\\s+\\*\\*(.+?)\\*\\*[:：]?(.*)$/);\n//     if (attractionMatch && currentDay?.items?.length > 0) {\n//       const lastPeriod = currentDay.items[currentDay.items.length - 1];\n//       lastPeriod.activities.push({\n//         name: attractionMatch[1],\n//         description: attractionMatch[2].trim()\n//       });\n//     }\n//   }\n\n//   if (currentDay) schedule.push(currentDay);\n//   return schedule;\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AIPlan() {\n  _s();\n  const location = useLocation();\n  const planData = location.state || JSON.parse(localStorage.getItem(\"planData\")) || {};\n  const [plan, setPlan] = useState('');\n  const [preference, setPreference] = useState('');\n  const [structuredSchedule, setStructuredSchedule] = useState([]);\n  const generatePlan = async () => {\n    const days = calculateDays(planData.startDate, planData.endDate);\n    try {\n      const response = await fetch('http://localhost:3001/api/plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromCity: planData.fromCity,\n          toCity: planData.destination,\n          days,\n          startDate: planData.startDate,\n          endDate: planData.endDate,\n          preferences: preference\n        })\n      });\n      const data = await response.json();\n      console.log(\"🐛 AI 返回的数据：\", data);\n      setPlan(data.markdown);\n      setStructuredSchedule(data.schedule);\n    } catch (err) {\n      console.error('Error generating plan:', err);\n    }\n  };\n  const calculateDays = (start, end) => {\n    const s = new Date(start);\n    const e = new Date(end);\n    return Math.max((e - s) / (1000 * 60 * 60 * 24) + 1, 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Travel Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [planData.fromCity, \" \\u2192 \", planData.destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 72\n        }, this), \"Dates: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [planData.startDate, \" \\u2192 \", planData.endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: preference,\n        onChange: e => setPreference(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Preference\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"nature\",\n          children: \"Nature\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"history\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"food\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePlan,\n        children: \"Generate Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), plan && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"markdown-detail\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: plan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-card-view\",\n          children: /*#__PURE__*/_jsxDEV(ScheduleCards, {\n            schedule: structuredSchedule\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AIPlan, \"ZSO5QTHpM7+bbADXsaZ2EiDJDUc=\", false, function () {\n  return [useLocation];\n});\n_c = AIPlan;\nfunction ScheduleCards({\n  schedule = []\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-schedule-wrapper\",\n    children: schedule.map((day, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"day-title\",\n        children: day.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-list\",\n        children: day.items.map((item, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-item-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-time\",\n            children: item.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-desc\",\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), item.duration && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-duration\",\n              children: [\"\\u23F1 \", item.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, j, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ScheduleCards;\nexport default AIPlan;\nvar _c, _c2;\n$RefreshReg$(_c, \"AIPlan\");\n$RefreshReg$(_c2, \"ScheduleCards\");","map":{"version":3,"names":["React","useState","useLocation","ReactMarkdown","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPlan","_s","location","planData","state","JSON","parse","localStorage","getItem","plan","setPlan","preference","setPreference","structuredSchedule","setStructuredSchedule","generatePlan","days","calculateDays","startDate","endDate","response","fetch","method","headers","body","stringify","fromCity","toCity","destination","preferences","data","json","console","log","markdown","schedule","err","error","start","end","s","Date","e","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","target","onClick","ScheduleCards","_c","map","day","i","date","items","item","j","time","title","description","duration","_c2","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/AIPlan.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './AIPlan.css';\nimport Navbar from './Navbar';\n\n// // 🧠 提取卡片行程结构\n// function extractCardScheduleFromMarkdown(markdownText) {\n//   const lines = markdownText.split('\\n');\n//   const schedule = [];\n//   let currentDay = null;\n\n//   for (let line of lines) {\n//     const dayMatch = line.match(/^### .*Day\\s*(\\d+):\\s*(.+)$/);\n//     if (dayMatch) {\n//       if (currentDay) schedule.push(currentDay);\n//       currentDay = {\n//         day: `Day ${dayMatch[1]}`,\n//         date: dayMatch[2],\n//         items: []\n//       };\n//     }\n\n//     const sectionMatch = line.match(/^####\\s+\\*\\*(.+?)\\s+\\[(.+?)\\]\\*\\*/);\n//     if (sectionMatch && currentDay) {\n//       currentDay.items.push({\n//         period: sectionMatch[1],\n//         timeRange: sectionMatch[2],\n//         activities: []\n//       });\n//     }\n\n//     const attractionMatch = line.match(/^\\-\\s+\\*\\*(.+?)\\*\\*[:：]?(.*)$/);\n//     if (attractionMatch && currentDay?.items?.length > 0) {\n//       const lastPeriod = currentDay.items[currentDay.items.length - 1];\n//       lastPeriod.activities.push({\n//         name: attractionMatch[1],\n//         description: attractionMatch[2].trim()\n//       });\n//     }\n//   }\n\n//   if (currentDay) schedule.push(currentDay);\n//   return schedule;\n// }\n\nfunction AIPlan() {\n  const location = useLocation();\n  const planData = location.state || JSON.parse(localStorage.getItem(\"planData\")) || {};\n  const [plan, setPlan] = useState('');\n  const [preference, setPreference] = useState('');\n  const [structuredSchedule, setStructuredSchedule] = useState([]);\n\n  const generatePlan = async () => {\n    const days = calculateDays(planData.startDate, planData.endDate);\n    try {\n      const response = await fetch('http://localhost:3001/api/plan', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromCity: planData.fromCity,\n          toCity: planData.destination,\n          days,\n          startDate: planData.startDate,\n          endDate: planData.endDate,\n          preferences: preference,\n        }),\n      });\n      \n      const data = await response.json();\n      console.log(\"🐛 AI 返回的数据：\", data);\n          setPlan(data.markdown);\n    setStructuredSchedule(data.schedule);\n    } catch (err) {\n      console.error('Error generating plan:', err);\n    }\n  };\n\n  const calculateDays = (start, end) => {\n    const s = new Date(start);\n    const e = new Date(end);\n    return Math.max((e - s) / (1000 * 60 * 60 * 24) + 1, 1);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"app-container\">\n        <h1>AI Travel Planner</h1>\n        <p>\n          <strong>{planData.fromCity} → {planData.destination}</strong><br />\n          Dates: <strong>{planData.startDate} → {planData.endDate}</strong>\n        </p>\n\n        <select value={preference} onChange={(e) => setPreference(e.target.value)}>\n          <option value=\"\">Select Preference</option>\n          <option value=\"nature\">Nature</option>\n          <option value=\"history\">History</option>\n          <option value=\"food\">Food</option>\n        </select>\n        <button onClick={generatePlan}>Generate Plan</button>\n\n        {plan && (\n          <div className=\"plan-layout\">\n            <div className=\"markdown-detail\">\n              <ReactMarkdown>{plan}</ReactMarkdown>\n            </div>\n            <div className=\"sidebar-card-view\">\n              <ScheduleCards schedule={structuredSchedule} />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction ScheduleCards({ schedule = [] }) {\n  return (\n    <div className=\"card-schedule-wrapper\">\n      {schedule.map((day, i) => (\n        <div className=\"day-block\" key={i}>\n          <h3 className=\"day-title\">{day.date}</h3>\n          <div className=\"item-list\">\n            {day.items.map((item, j) => (\n              <div className=\"schedule-item-card\" key={j}>\n                <div className=\"item-time\">{item.time}</div>\n                <div className=\"item-details\">\n                  <div className=\"item-title\">{item.title}</div>\n                  <div className=\"item-desc\">{item.description}</div>\n                  {item.duration && <div className=\"item-duration\">⏱ {item.duration}</div>}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n\n\nexport default AIPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}