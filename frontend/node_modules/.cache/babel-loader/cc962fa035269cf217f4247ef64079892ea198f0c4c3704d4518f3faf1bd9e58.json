{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/SummaryCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SummaryCard.css\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TravelSummaries() {\n  _s();\n  const navigate = useNavigate();\n  const [card, setCard] = useState(null);\n  useEffect(() => {\n    const planRaw = localStorage.getItem(\"planData\");\n    const scheduleRaw = localStorage.getItem(\"myPlan\");\n    if (planRaw && scheduleRaw) {\n      try {\n        var _plan$fromCity, _plan$destination, _scheduleData$schedul, _scheduleData$schedul2;\n        const plan = JSON.parse(planRaw);\n        const scheduleData = JSON.parse(scheduleRaw);\n        const fromCity = ((_plan$fromCity = plan.fromCity) === null || _plan$fromCity === void 0 ? void 0 : _plan$fromCity.trim()) || \"Ëµ∑ÁÇπÊú™Áü•\";\n        const destination = ((_plan$destination = plan.destination) === null || _plan$destination === void 0 ? void 0 : _plan$destination.trim()) || \"ÁõÆÁöÑÂú∞Êú™Áü•\";\n        const startDate = plan.startDate;\n        const endDate = plan.endDate;\n        const totalDays = ((_scheduleData$schedul = scheduleData.schedule) === null || _scheduleData$schedul === void 0 ? void 0 : _scheduleData$schedul.length) || 0;\n        const totalItems = (_scheduleData$schedul2 = scheduleData.schedule) === null || _scheduleData$schedul2 === void 0 ? void 0 : _scheduleData$schedul2.reduce((sum, day) => sum + day.items.length, 0);\n        setSummaries([{\n          fromCity,\n          destination,\n          startDate,\n          endDate,\n          totalDays,\n          totalItems,\n          cover: \"/images/default-cover.jpg\"\n        }]);\n      } catch (err) {\n        console.error(\"‚ùå Failed to parse planData or myPlan:\", err);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"summary-title\",\n        children: \"\\uD83C\\uDF10 \\u6211\\u7684\\u6240\\u6709\\u884C\\u7A0B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), card ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        onClick: () => navigate(\"/plan-summary\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-city\",\n            children: [card.city, \" \", card.duration, \"\\u6E38\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: card.dateRange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [card.placeCount, \" \\u4E2A\\u5730\\u70B9\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-right\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.cover,\n            alt: \"cover\",\n            className: \"summary-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: \"1rem\"\n        },\n        children: \"\\uD83D\\uDEAB \\u6CA1\\u6709\\u627E\\u5230\\u884C\\u7A0B\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TravelSummaries, \"tTDRiTsTq2TJFFVBO0H0uF8YguU=\", false, function () {\n  return [useNavigate];\n});\n_c = TravelSummaries;\nvar _c;\n$RefreshReg$(_c, \"TravelSummaries\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","TravelSummaries","_s","navigate","card","setCard","planRaw","localStorage","getItem","scheduleRaw","_plan$fromCity","_plan$destination","_scheduleData$schedul","_scheduleData$schedul2","plan","JSON","parse","scheduleData","fromCity","trim","destination","startDate","endDate","totalDays","schedule","length","totalItems","reduce","sum","day","items","setSummaries","cover","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","city","duration","dateRange","placeCount","src","alt","style","padding","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/SummaryCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./SummaryCard.css\";\nimport Navbar from \"./Navbar\";\n\nexport default function TravelSummaries() {\n  const navigate = useNavigate();\n  const [card, setCard] = useState(null);\n\n  useEffect(() => {\n  const planRaw = localStorage.getItem(\"planData\");\n  const scheduleRaw = localStorage.getItem(\"myPlan\");\n\n  if (planRaw && scheduleRaw) {\n    try {\n      const plan = JSON.parse(planRaw);\n      const scheduleData = JSON.parse(scheduleRaw);\n      \n      const fromCity = plan.fromCity?.trim() || \"Ëµ∑ÁÇπÊú™Áü•\";\n      const destination = plan.destination?.trim() || \"ÁõÆÁöÑÂú∞Êú™Áü•\";\n\n      const startDate = plan.startDate;\n      const endDate = plan.endDate;\n\n      const totalDays = scheduleData.schedule?.length || 0;\n      const totalItems = scheduleData.schedule?.reduce((sum, day) => sum + day.items.length, 0);\n\n      setSummaries([\n        {\n          fromCity,\n          destination,\n          startDate,\n          endDate,\n          totalDays,\n          totalItems,\n          cover: \"/images/default-cover.jpg\"\n        }\n      ]);\n    } catch (err) {\n      console.error(\"‚ùå Failed to parse planData or myPlan:\", err);\n    }\n  }\n}, []);\n\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"summary-wrapper\">\n        <h2 className=\"summary-title\">üåê ÊàëÁöÑÊâÄÊúâË°åÁ®ã</h2>\n        {card ? (\n          <div className=\"summary-card\" onClick={() => navigate(\"/plan-summary\")}>\n            <div className=\"summary-left\">\n              <div className=\"summary-city\">\n                {card.city} {card.duration}Ê∏∏\n              </div>\n              <div className=\"summary-meta\">\n                <div>{card.dateRange}</div>\n                <div>{card.placeCount} ‰∏™Âú∞ÁÇπ</div>\n              </div>\n            </div>\n            <div className=\"summary-right\">\n              <img src={card.cover} alt=\"cover\" className=\"summary-cover\" />\n            </div>\n          </div>\n        ) : (\n          <p style={{ padding: \"1rem\" }}>üö´ Ê≤°ÊúâÊâæÂà∞Ë°åÁ®ãÊï∞ÊçÆ</p>\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}