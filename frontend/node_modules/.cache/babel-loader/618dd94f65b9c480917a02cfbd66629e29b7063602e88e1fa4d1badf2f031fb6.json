{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/AIPlan.js\",\n  _s = $RefreshSig$();\n// AIPlan.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './AIPlan.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AIPlan() {\n  _s();\n  const location = useLocation();\n  const planData = location.state || {}; // 来自 CreatePlan\n  const [plan, setPlan] = useState('');\n  const [preference, setPreference] = useState('');\n  const generatePlan = async () => {\n    const days = calculateDays(planData.startDate, planData.endDate);\n    try {\n      const response = await fetch('http://localhost:3001/api/plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromCity: planData.fromCity,\n          toCity: planData.destination,\n          days,\n          startDate: planData.startDate,\n          endDate: planData.endDate,\n          preferences: preference\n        })\n      });\n      const data = await response.json();\n      setPlan(data.plan);\n    } catch (err) {\n      console.error('Error generating plan:', err);\n    }\n  };\n  const calculateDays = (start, end) => {\n    const s = new Date(start);\n    const e = new Date(end);\n    const diff = (e - s) / (1000 * 60 * 60 * 24) + 1;\n    return Math.max(diff, 1);\n  };\n  const handlePreferenceChange = e => {\n    setPreference(e.target.value);\n  };\n  const handleGenerateClick = () => {\n    if (!preference) {\n      alert(\"Please select a preference before generating your plan.\");\n      return;\n    }\n    generatePlan();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Travel Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [planData.fromCity, \" to: \", planData.destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 72\n      }, this), \"Dates: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [planData.startDate, \" \\u2192 \", planData.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 74\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: preference,\n      onChange: handlePreferenceChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Preference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"nature\",\n        children: \"Nature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"history\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"food\",\n        children: \"Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateClick,\n      children: \"Generate Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), plan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plan-output\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: plan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AIPlan, \"IEsRpUOwkec1XuAVEJeZqCAtMtc=\", false, function () {\n  return [useLocation];\n});\n_c = AIPlan;\nexport default AIPlan;\nvar _c;\n$RefreshReg$(_c, \"AIPlan\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","ReactMarkdown","jsxDEV","_jsxDEV","AIPlan","_s","location","planData","state","plan","setPlan","preference","setPreference","generatePlan","days","calculateDays","startDate","endDate","response","fetch","method","headers","body","JSON","stringify","fromCity","toCity","destination","preferences","data","json","err","console","error","start","end","s","Date","e","diff","Math","max","handlePreferenceChange","target","value","handleGenerateClick","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/AIPlan.js"],"sourcesContent":["// AIPlan.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './AIPlan.css';\n\nfunction AIPlan() {\n  const location = useLocation();\n  const planData = location.state || {}; // 来自 CreatePlan\n  const [plan, setPlan] = useState('');\n  const [preference, setPreference] = useState('');\n\n  const generatePlan = async () => {\n    const days = calculateDays(planData.startDate, planData.endDate);\n    try {\n      const response = await fetch('http://localhost:3001/api/plan', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          fromCity: planData.fromCity,\n          toCity: planData.destination,\n          days,\n          startDate: planData.startDate,\n          endDate: planData.endDate,\n          preferences: preference,\n        }),\n      });\n      const data = await response.json();\n      setPlan(data.plan);\n    } catch (err) {\n      console.error('Error generating plan:', err);\n    }\n  };\n\n  const calculateDays = (start, end) => {\n    const s = new Date(start);\n    const e = new Date(end);\n    const diff = (e - s) / (1000 * 60 * 60 * 24) + 1;\n    return Math.max(diff, 1);\n  };\n\n  const handlePreferenceChange = (e) => {\n    setPreference(e.target.value);\n  };\n\n  const handleGenerateClick = () => {\n    if (!preference) {\n      alert(\"Please select a preference before generating your plan.\");\n      return;\n    }\n    generatePlan();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>AI Travel Planner</h1>\n      <p>\n        <strong>{planData.fromCity} to: {planData.destination}</strong><br />\n        Dates: <strong>{planData.startDate} → {planData.endDate}</strong><br />\n        {/* Participants: <strong>{planData.participants}</strong> */}\n      </p>\n\n      <select value={preference} onChange={handlePreferenceChange}>\n        <option value=\"\">Select Preference</option>\n        <option value=\"nature\">Nature</option>\n        <option value=\"history\">History</option>\n        <option value=\"food\">Food</option>\n      </select>\n      <button onClick={handleGenerateClick}>Generate Plan</button>\n\n      {plan && (\n        <div className=\"plan-output\">\n          <ReactMarkdown>{plan}</ReactMarkdown>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AIPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}