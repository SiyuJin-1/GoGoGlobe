{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/UploadPhotoForm.js\",\n  _import$meta$env,\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALLOW_TYPES = [\"image/jpeg\", \"image/png\", \"image/webp\"];\nconst MAX_MB = 15;\n\n// 建议复用你的 API_BASE\nconst API_BASE = ((_import$meta$env = import.meta.env) === null || _import$meta$env === void 0 ? void 0 : _import$meta$env.VITE_API_BASE) || \"http://localhost:3001\";\nexport default function UploadPhotoForm({\n  tripId,\n  dayIndex,\n  onUpload\n}) {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [placeName, setPlaceName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"public\"); // 只用于落库权限，不影响桶\n  const [uploading, setUploading] = useState(false);\n  const userId = useMemo(() => Number(localStorage.getItem(\"userId\")), []);\n  const handlePick = e => {\n    const picked = Array.from(e.target.files || []);\n    const bad = [];\n    const ok = picked.filter(f => {\n      const validType = ALLOW_TYPES.includes(f.type);\n      const validSize = f.size <= MAX_MB * 1024 * 1024;\n      if (!validType || !validSize) bad.push(f.name);\n      return validType && validSize;\n    });\n    if (bad.length) {\n      alert(`以下文件不符合要求（JPG/PNG/WebP，≤ ${MAX_MB}MB）：\\n` + bad.join(\"\\n\"));\n    }\n    setFiles(ok);\n  };\n\n  // 👉 只传 kind:\"photo\"，让后端统一放到“照片私有桶”\n  async function getSignedUrl(file, {\n    userId,\n    tripId\n  }) {\n    const r = await fetch(`${API_BASE}/api/upload/sign`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        contentType: file.type,\n        userId,\n        tripId,\n        kind: \"photo\",\n        // ✅ 固定使用 photo；不再传 visibility\n        size: file.size\n      })\n    });\n    if (!r.ok) throw new Error(\"获取签名失败：\" + (await r.text().catch(() => \"\")));\n    return r.json(); // { uploadUrl, key, bucket }\n  }\n  const handleUpload = async () => {\n    if (!userId || !tripId || dayIndex == null) {\n      alert(\"缺少必要信息（userId / tripId / dayIndex）\");\n      return;\n    }\n    if (!files.length) return alert(\"请选择照片\");\n    setUploading(true);\n    try {\n      for (const file of files) {\n        // 1) 取 PUT 预签名（进入私有桶）\n        const {\n          uploadUrl,\n          key\n        } = await getSignedUrl(file, {\n          userId,\n          tripId\n        });\n\n        // 2) 直传 S3（Content-Type 必须一致）\n        const putRes = await fetch(uploadUrl, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": file.type\n          },\n          body: file\n        });\n        if (!putRes.ok) {\n          throw new Error(`上传到 S3 失败：${file.name} — ` + (await putRes.text().catch(() => \"\")));\n        }\n\n        // 3) 落库 —— 这里才区分 public/private\n        //    因为都在私有桶里，所以 imageUrl 一律 null（展示时用 GET 预签名）\n        const metaRes = await fetch(`${API_BASE}/api/photo`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            tripId: Number(tripId),\n            uploadedBy: Number(userId),\n            dayIndex: Number(dayIndex),\n            placeName: placeName || null,\n            description: description || null,\n            visibility,\n            // ✅ 权限控制在库里\n            imageKey: key,\n            // ✅ 必须\n            imageUrl: null // ✅ 统一私有桶，不写直链\n          })\n        });\n        if (!metaRes.ok) {\n          throw new Error(`保存元数据失败：${file.name} — ` + (await metaRes.text().catch(() => \"\")));\n        }\n      }\n      setFiles([]);\n      setPlaceName(\"\");\n      setDescription(\"\");\n      alert(\"✅ 全部照片上传成功\");\n      onUpload === null || onUpload === void 0 ? void 0 : onUpload();\n    } catch (err) {\n      console.error(\"❌ 上传失败:\", err);\n      alert(err.message || \"上传失败\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uD83D\\uDCE4 Upload New Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: ALLOW_TYPES.join(\",\"),\n      onChange: handlePick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD83D\\uDCCD Place Name\",\n      value: placeName,\n      onChange: e => setPlaceName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uD83D\\uDCDD Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: visibility,\n      onChange: e => setVisibility(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"public\",\n        children: \"\\uD83C\\uDF0D Public (\\u5BF9\\u65C5\\u4F34\\u53EF\\u89C1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"private\",\n        children: \"\\uD83D\\uDD12 Private (\\u4EC5\\u4E0A\\u4F20\\u8005)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !files.length || uploading,\n      children: uploading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), !!files.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8,\n        fontSize: 12,\n        color: \"#6b7280\"\n      },\n      children: [\"\\u5DF2\\u9009 \", files.length, \" \\u5F20\\uFF1B\\u4EC5\\u652F\\u6301 JPG/PNG/WebP\\uFF0C\\u5355\\u5F20 \\u2264 \", MAX_MB, \"MB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPhotoForm, \"4m0m5EcVRpmfSj3BKrzvT8sKkzw=\");\n_c = UploadPhotoForm;\nvar _c;\n$RefreshReg$(_c, \"UploadPhotoForm\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","ALLOW_TYPES","MAX_MB","API_BASE","_import$meta$env","import","meta","env","VITE_API_BASE","UploadPhotoForm","tripId","dayIndex","onUpload","_s","files","setFiles","placeName","setPlaceName","description","setDescription","visibility","setVisibility","uploading","setUploading","userId","Number","localStorage","getItem","handlePick","e","picked","Array","from","target","bad","ok","filter","f","validType","includes","type","validSize","size","push","name","length","alert","join","getSignedUrl","file","r","fetch","method","headers","body","JSON","stringify","contentType","kind","Error","text","catch","json","handleUpload","uploadUrl","key","putRes","metaRes","uploadedBy","imageKey","imageUrl","err","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","accept","onChange","placeholder","value","onClick","disabled","style","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/UploadPhotoForm.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nconst ALLOW_TYPES = [\"image/jpeg\", \"image/png\", \"image/webp\"];\nconst MAX_MB = 15;\n\n// 建议复用你的 API_BASE\nconst API_BASE = import.meta.env?.VITE_API_BASE || \"http://localhost:3001\";\n\nexport default function UploadPhotoForm({ tripId, dayIndex, onUpload }) {\n  const [files, setFiles] = useState([]);\n  const [placeName, setPlaceName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"public\"); // 只用于落库权限，不影响桶\n  const [uploading, setUploading] = useState(false);\n\n  const userId = useMemo(() => Number(localStorage.getItem(\"userId\")), []);\n\n  const handlePick = (e) => {\n    const picked = Array.from(e.target.files || []);\n    const bad = [];\n    const ok = picked.filter((f) => {\n      const validType = ALLOW_TYPES.includes(f.type);\n      const validSize = f.size <= MAX_MB * 1024 * 1024;\n      if (!validType || !validSize) bad.push(f.name);\n      return validType && validSize;\n    });\n    if (bad.length) {\n      alert(`以下文件不符合要求（JPG/PNG/WebP，≤ ${MAX_MB}MB）：\\n` + bad.join(\"\\n\"));\n    }\n    setFiles(ok);\n  };\n\n  // 👉 只传 kind:\"photo\"，让后端统一放到“照片私有桶”\n  async function getSignedUrl(file, { userId, tripId }) {\n    const r = await fetch(`${API_BASE}/api/upload/sign`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        contentType: file.type,\n        userId,\n        tripId,\n        kind: \"photo\",     // ✅ 固定使用 photo；不再传 visibility\n        size: file.size,\n      }),\n    });\n    if (!r.ok) throw new Error(\"获取签名失败：\" + (await r.text().catch(() => \"\")));\n    return r.json(); // { uploadUrl, key, bucket }\n  }\n\n  const handleUpload = async () => {\n    if (!userId || !tripId || dayIndex == null) {\n      alert(\"缺少必要信息（userId / tripId / dayIndex）\");\n      return;\n    }\n    if (!files.length) return alert(\"请选择照片\");\n\n    setUploading(true);\n    try {\n      for (const file of files) {\n        // 1) 取 PUT 预签名（进入私有桶）\n        const { uploadUrl, key } = await getSignedUrl(file, { userId, tripId });\n\n        // 2) 直传 S3（Content-Type 必须一致）\n        const putRes = await fetch(uploadUrl, {\n          method: \"PUT\",\n          headers: { \"Content-Type\": file.type },\n          body: file,\n        });\n        if (!putRes.ok) {\n          throw new Error(`上传到 S3 失败：${file.name} — ` + (await putRes.text().catch(() => \"\")));\n        }\n\n        // 3) 落库 —— 这里才区分 public/private\n        //    因为都在私有桶里，所以 imageUrl 一律 null（展示时用 GET 预签名）\n        const metaRes = await fetch(`${API_BASE}/api/photo`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            tripId: Number(tripId),\n            uploadedBy: Number(userId),\n            dayIndex: Number(dayIndex),\n            placeName: placeName || null,\n            description: description || null,\n            visibility,          // ✅ 权限控制在库里\n            imageKey: key,       // ✅ 必须\n            imageUrl: null,      // ✅ 统一私有桶，不写直链\n          }),\n        });\n        if (!metaRes.ok) {\n          throw new Error(`保存元数据失败：${file.name} — ` + (await metaRes.text().catch(() => \"\")));\n        }\n      }\n\n      setFiles([]);\n      setPlaceName(\"\");\n      setDescription(\"\");\n      alert(\"✅ 全部照片上传成功\");\n      onUpload?.();\n    } catch (err) {\n      console.error(\"❌ 上传失败:\", err);\n      alert(err.message || \"上传失败\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"upload-form-card\">\n      <h4>📤 Upload New Photo</h4>\n\n      <input type=\"file\" multiple accept={ALLOW_TYPES.join(\",\")} onChange={handlePick} />\n\n      <input\n        type=\"text\"\n        placeholder=\"📍 Place Name\"\n        value={placeName}\n        onChange={(e) => setPlaceName(e.target.value)}\n      />\n\n      <input\n        type=\"text\"\n        placeholder=\"📝 Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n\n      {/* 仅影响落库后的访问权限，不影响 S3 桶 */}\n      <select value={visibility} onChange={(e) => setVisibility(e.target.value)}>\n        <option value=\"public\">🌍 Public (对旅伴可见)</option>\n        <option value=\"private\">🔒 Private (仅上传者)</option>\n      </select>\n\n      <button onClick={handleUpload} disabled={!files.length || uploading}>\n        {uploading ? \"Uploading...\" : \"Upload\"}\n      </button>\n\n      {!!files.length && (\n        <div style={{ marginTop: 8, fontSize: 12, color: \"#6b7280\" }}>\n          已选 {files.length} 张；仅支持 JPG/PNG/WebP，单张 ≤ {MAX_MB}MB\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}