{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/PackList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport SubNavBar from \"./SubNavBar\";\nimport \"./PackingList.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PackingList() {\n  _s();\n  const {\n    id\n  } = useParams(); // ‰ªé URL ÊãøÁî®Êà∑ ID\n  const [packingData, setPackingData] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [newItems, setNewItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Ëé∑Âèñ packingDataÔºàÊ†πÊçÆÁî®Êà∑ IDÔºâ\n  useEffect(() => {\n    const fetchPackingData = async () => {\n      try {\n        const res = await fetch(`http://localhost:3001/api/trip/user/${id}`); // ÊàñÊç¢Êàê userId Êé•Âè£\n        let data = await res.json();\n        console.log(\"üì¶ Ëé∑Âèñ packing data:\", data);\n\n        // ‚úÖ Â¶ÇÊûú‰∏çÊòØÊï∞ÁªÑÔºåËΩ¨ÊàêÊï∞ÁªÑ\n        if (!Array.isArray(data)) {\n          console.warn(\"‚ö†Ô∏è ËøîÂõûÂÄº‰∏çÊòØÊï∞ÁªÑ:\", data);\n          data = [data];\n        }\n        const defaultItemNames = [\"Ë°£Êúç\", \"ÈûãÂ≠ê\", \"Ê¥óÊº±Áî®ÂìÅ\"];\n        const converted = data.map(trip => {\n          const start = new Date(trip.startDate);\n          const end = new Date(trip.endDate);\n          const days = Math.round((end - start) / (1000 * 60 * 60 * 24)) + 1;\n\n          // ÂàùÂßãÂåñ items\n          let items = [];\n          if (Array.isArray(trip.schedule)) {\n            items = trip.schedule.flatMap(s => {\n              if (Array.isArray(s.items)) {\n                return s.items.filter(i => i && (typeof i === \"string\" || i.name)) // Âè™‰øùÁïôÊúâ name ÁöÑ\n                .map(i => {\n                  var _i$packed, _i$assignedTo;\n                  return typeof i === \"string\" ? {\n                    name: i,\n                    packed: false,\n                    assignedTo: \"Êú™ÂàÜÈÖç\"\n                  } : {\n                    name: i.name,\n                    packed: (_i$packed = i.packed) !== null && _i$packed !== void 0 ? _i$packed : false,\n                    assignedTo: (_i$assignedTo = i.assignedTo) !== null && _i$assignedTo !== void 0 ? _i$assignedTo : \"Êú™ÂàÜÈÖç\"\n                  };\n                });\n              }\n              return [];\n            });\n          }\n\n          // ‚ö†Ô∏è Â¶ÇÊûú items ÊòØÁ©∫Êï∞ÁªÑÔºåÊàñËÄÖÊâÄÊúâ item ÈÉΩÊ≤°Êúâ nameÔºåÂ∞±Áî®ÈªòËÆ§Áâ©ÂìÅ\n          if (!items.length || !items.some(item => item.name && item.name.trim())) {\n            items = defaultItemNames.map(name => ({\n              name,\n              packed: false,\n              assignedTo: \"Êú™ÂàÜÈÖç\"\n            }));\n          }\n          return {\n            ...trip,\n            title: `${trip.fromCity} ‚ûù ${trip.destination}`,\n            date: `${start.getMonth() + 1}/${start.getDate()}/${start.getFullYear()} ~ ${end.getMonth() + 1}/${end.getDate()}/${end.getFullYear()}`,\n            days,\n            items\n          };\n        });\n        console.log(\"‚úÖ ËΩ¨Êç¢ÂêéÁöÑ packingData:\", converted);\n        setPackingData(converted);\n        if (converted.length > 0) {\n          setSelectedTripId(converted[0].id);\n        }\n      } catch (err) {\n        console.error(\"‚ùå Ëé∑Âèñ trip Â§±Ë¥•:\", err);\n      }\n    };\n    fetchPackingData();\n  }, [id]);\n\n  // Ëá™Âä®‰øùÂ≠òÂà∞ localStorageÔºàÂèØÈÄâÔºâ\n  useEffect(() => {\n    if (packingData.length > 0) {\n      localStorage.setItem(\"packingData\", JSON.stringify(packingData));\n    }\n  }, [packingData]);\n  console.log(\"üì¶ packingData:\", packingData);\n\n  // ‰øÆÊîπ packed Áä∂ÊÄÅ\n  const togglePacked = (tripId, index) => {\n    const updated = packingData.map(trip => {\n      if (trip.id === tripId) {\n        const items = [...trip.items];\n        items[index].packed = !items[index].packed;\n        return {\n          ...trip,\n          items\n        };\n      }\n      return trip;\n    });\n    setPackingData(updated);\n  };\n\n  // Ê∑ªÂä†Êñ∞ item\n  const {\n    PrismaClient\n  } = require(\"../generated/prisma\");\n  const prisma = new PrismaClient();\n  exports.saveTrip = async (req, res) => {\n    const {\n      userId,\n      fromCity,\n      destination,\n      startDate,\n      endDate,\n      schedule\n    } = req.body;\n    try {\n      const newTrip = await prisma.trip.create({\n        data: {\n          userId: Number(userId),\n          fromCity,\n          // ‚úÖ Êñ∞Â¢ûÔºöÂá∫ÂèëÂüéÂ∏Ç\n          destination,\n          // ‚úÖ Êñ∞Â¢ûÔºöÁõÆÁöÑÂú∞\n          startDate: new Date(startDate),\n          endDate: new Date(endDate),\n          schedule,\n          items: [] // ÂàùÂßãÂåñ items Êï∞ÁªÑ\n        }\n      });\n      res.json(newTrip);\n    } catch (err) {\n      console.error(\"‚ùå Failed to save trip:\", err);\n      res.status(500).json({\n        message: \"Failed to save trip\",\n        error: err.message\n      });\n    }\n  };\n  exports.getTripsByUser = async (req, res) => {\n    const {\n      userId\n    } = req.params;\n    try {\n      const trips = await prisma.trip.findMany({\n        where: {\n          userId: Number(userId)\n        }\n      });\n      res.json(trips);\n    } catch (err) {\n      console.error(\"‚ùå Failed to fetch user trips:\", err);\n      res.status(500).json({\n        message: \"Failed to fetch trips\",\n        error: err.message\n      });\n    }\n  };\n  exports.deleteTrip = async (req, res) => {\n    const {\n      id\n    } = req.params;\n    try {\n      await prisma.trip.delete({\n        where: {\n          id: Number(id)\n        }\n      });\n      res.json({\n        message: \"Trip deleted\"\n      });\n    } catch (err) {\n      console.error(\"‚ùå Âà†Èô§Ë°åÁ®ãÂ§±Ë¥•:\", err);\n      res.status(500).json({\n        error: \"Failed to delete trip\"\n      });\n    }\n  };\n  exports.updateTrip = async (req, res) => {\n    const {\n      id\n    } = req.params;\n    const {\n      userId,\n      fromCity,\n      destination,\n      startDate,\n      endDate,\n      schedule\n    } = req.body;\n    try {\n      const updatedTrip = await prisma.trip.update({\n        where: {\n          id: Number(id)\n        },\n        data: {\n          userId: Number(userId),\n          fromCity,\n          destination,\n          startDate: new Date(startDate),\n          endDate: new Date(endDate),\n          schedule\n        }\n      });\n      res.json(updatedTrip);\n    } catch (err) {\n      console.error(\"‚ùå Failed to update trip:\", err);\n      res.status(500).json({\n        message: \"Failed to update trip\",\n        error: err.message\n      });\n    }\n  };\n  exports.getTripById = async (req, res) => {\n    const {\n      id\n    } = req.params;\n    try {\n      const trip = await prisma.trip.findUnique({\n        where: {\n          id: Number(id)\n        }\n      });\n      if (!trip) {\n        return res.status(404).json({\n          message: \"Trip not found\"\n        });\n      }\n      res.json(trip);\n    } catch (err) {\n      console.error(\"‚ùå Ëé∑ÂèñË°åÁ®ãÂ§±Ë¥•:\", err);\n      res.status(500).json({\n        message: \"ÊúçÂä°Âô®Âá∫Èîô\",\n        error: err.message\n      });\n    }\n  };\n  exports.addItemToTrip = async (req, res) => {\n    const {\n      id\n    } = req.params;\n    const {\n      name,\n      packed = false,\n      assignedTo = \"Êú™ÂàÜÈÖç\"\n    } = req.body;\n    try {\n      // ÊâæÂà∞ÂéüÊù•ÁöÑ trip\n      const trip = await prisma.trip.findUnique({\n        where: {\n          id: Number(id)\n        }\n      });\n      if (!trip) {\n        return res.status(404).json({\n          message: \"Trip not found\"\n        });\n      }\n\n      // Â¶ÇÊûú schedule ÊòØÁ©∫ÁöÑÔºåÂàùÂßãÂåñÊàêÁ©∫Êï∞ÁªÑ\n      const schedule = Array.isArray(trip.schedule) ? trip.schedule : [];\n\n      // üëá ÊèíÂÖ•‰∏Ä‰∏™ÈªòËÆ§ÁªìÊûÑÔºà‰Ω†ÂèØ‰ª•Ê†πÊçÆÂÆûÈôÖ‰øÆÊîπÔºâ\n      const newItem = {\n        name,\n        packed,\n        assignedTo\n      };\n\n      // ÂÅáËÆæ schedule ÊòØÁî±Â§öÂ§©ÁªÑÊàêÁöÑÊï∞ÁªÑÔºåÊàë‰ª¨Êää item Ê∑ªÂä†Âà∞Á¨¨‰∏ÄÂ§©\n      if (schedule.length === 0) {\n        schedule.push({\n          day: 1,\n          items: [newItem]\n        });\n      } else {\n        // ÈªòËÆ§Ê∑ªÂä†Âà∞Á¨¨‰∏ÄÂ§©ÔºàÊàñ‰Ω†ÂèØ‰ª•ÊâæÂΩìÂâçÊó•ÊúüÂåπÈÖçÔºâ\n        schedule[0].items = Array.isArray(schedule[0].items) ? [...schedule[0].items, newItem] : [newItem];\n      }\n\n      // ‰øùÂ≠òÊõ¥Êñ∞ÂêéÁöÑ trip\n      const updated = await prisma.trip.update({\n        where: {\n          id: Number(id)\n        },\n        data: {\n          schedule\n        }\n      });\n      res.json({\n        message: \"‚úÖ Ê∑ªÂä†ÊàêÂäü\",\n        trip: updated\n      });\n    } catch (err) {\n      console.error(\"‚ùå Ê∑ªÂä†Áâ©ÂìÅÂ§±Ë¥•:\", err);\n      res.status(500).json({\n        error: \"Ê∑ªÂä†Â§±Ë¥•\",\n        details: err.message\n      });\n    }\n  };\n\n  // ‰øÆÊîπÁâ©ÂìÅÁöÑÂΩíÂ±û‰∫∫\n  const updateAssignedTo = (tripId, index, name) => {\n    const updated = packingData.map(trip => {\n      if (trip.id === tripId) {\n        const items = [...trip.items];\n        items[index].assignedTo = name;\n        return {\n          ...trip,\n          items\n        };\n      }\n      return trip;\n    });\n    setPackingData(updated);\n  };\n  const selectedTrip = packingData.find(trip => trip.id === selectedTripId);\n\n  //   if (loading) return <p style={{ padding: \"2rem\" }}>‚è≥ Loading packing list...</p>;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"packing-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trip-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tripSelect\",\n          children: \"\\u67E5\\u770B\\u884C\\u7A0B\\uFF1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"tripSelect\",\n          value: selectedTripId !== null && selectedTripId !== void 0 ? selectedTripId : \"\",\n          onChange: e => setSelectedTripId(Number(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u8BF7\\u9009\\u62E9\\u884C\\u7A0B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), packingData.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: trip.id,\n            children: trip.title\n          }, trip.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), selectedTrip && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"packing-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"packing-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedTrip.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"packing-date\",\n            children: [selectedTrip.date, \" \\u30FB\", selectedTrip.days, \"\\u5929\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"packing-items\",\n          children: selectedTrip.items.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"packing-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: item.packed,\n              onChange: () => togglePacked(selectedTrip.id, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textDecoration: item.packed ? \"line-through\" : \"none\"\n              },\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"assigned-label\",\n              children: [\"@\", item.assignedTo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"assigned-select\",\n              value: item.assignedTo,\n              onChange: e => updateAssignedTo(selectedTrip.id, idx, e.target.value),\n              children: [\"Êú™ÂàÜÈÖç\", \"Siyu Jin\", \"Hantao Zhou\"].map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: name,\n                children: name\n              }, name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-item-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u6DFB\\u52A0\\u65B0\\u7269\\u54C1...\",\n            value: newItems[selectedTrip.id] || \"\",\n            onChange: e => selectedTrip && setNewItems({\n              ...newItems,\n              [selectedTrip.id]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddItem(selectedTrip.id),\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PackingList, \"b/XyyWr4CP/otJOKk00GLUpEPJQ=\", false, function () {\n  return [useParams];\n});\n_c = PackingList;\nvar _c;\n$RefreshReg$(_c, \"PackingList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","SubNavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","PackingList","_s","id","packingData","setPackingData","selectedTripId","setSelectedTripId","newItems","setNewItems","loading","setLoading","fetchPackingData","res","fetch","data","json","console","log","Array","isArray","warn","defaultItemNames","converted","map","trip","start","Date","startDate","end","endDate","days","Math","round","items","schedule","flatMap","s","filter","i","name","_i$packed","_i$assignedTo","packed","assignedTo","length","some","item","trim","title","fromCity","destination","date","getMonth","getDate","getFullYear","err","error","localStorage","setItem","JSON","stringify","togglePacked","tripId","index","updated","PrismaClient","require","prisma","exports","saveTrip","req","userId","body","newTrip","create","Number","status","message","getTripsByUser","params","trips","findMany","where","deleteTrip","delete","updateTrip","updatedTrip","update","getTripById","findUnique","addItemToTrip","newItem","push","day","details","updateAssignedTo","selectedTrip","find","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","value","onChange","e","target","idx","type","checked","style","textDecoration","placeholder","onClick","handleAddItem","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/PackList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport SubNavBar from \"./SubNavBar\";\nimport \"./PackingList.css\";\n\nexport default function PackingList() {\n  const { id } = useParams(); // ‰ªé URL ÊãøÁî®Êà∑ ID\n  const [packingData, setPackingData] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [newItems, setNewItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Ëé∑Âèñ packingDataÔºàÊ†πÊçÆÁî®Êà∑ IDÔºâ\n  useEffect(() => {\n  const fetchPackingData = async () => {\n    try {\n      const res = await fetch(`http://localhost:3001/api/trip/user/${id}`); // ÊàñÊç¢Êàê userId Êé•Âè£\n      let data = await res.json();\n\n      console.log(\"üì¶ Ëé∑Âèñ packing data:\", data);\n\n      // ‚úÖ Â¶ÇÊûú‰∏çÊòØÊï∞ÁªÑÔºåËΩ¨ÊàêÊï∞ÁªÑ\n      if (!Array.isArray(data)) {\n        console.warn(\"‚ö†Ô∏è ËøîÂõûÂÄº‰∏çÊòØÊï∞ÁªÑ:\", data);\n        data = [data];\n      }\n\n      const defaultItemNames = [\"Ë°£Êúç\", \"ÈûãÂ≠ê\", \"Ê¥óÊº±Áî®ÂìÅ\"];\n\nconst converted = data.map((trip) => {\n  const start = new Date(trip.startDate);\n  const end = new Date(trip.endDate);\n  const days = Math.round((end - start) / (1000 * 60 * 60 * 24)) + 1;\n\n  // ÂàùÂßãÂåñ items\n  let items = [];\n\n  if (Array.isArray(trip.schedule)) {\n    items = trip.schedule.flatMap((s) => {\n      if (Array.isArray(s.items)) {\n        return s.items\n          .filter((i) => i && (typeof i === \"string\" || i.name)) // Âè™‰øùÁïôÊúâ name ÁöÑ\n          .map((i) =>\n            typeof i === \"string\"\n              ? { name: i, packed: false, assignedTo: \"Êú™ÂàÜÈÖç\" }\n              : {\n                  name: i.name,\n                  packed: i.packed ?? false,\n                  assignedTo: i.assignedTo ?? \"Êú™ÂàÜÈÖç\",\n                }\n          );\n      }\n      return [];\n    });\n  }\n\n  // ‚ö†Ô∏è Â¶ÇÊûú items ÊòØÁ©∫Êï∞ÁªÑÔºåÊàñËÄÖÊâÄÊúâ item ÈÉΩÊ≤°Êúâ nameÔºåÂ∞±Áî®ÈªòËÆ§Áâ©ÂìÅ\n  if (!items.length || !items.some((item) => item.name && item.name.trim())) {\n    items = defaultItemNames.map((name) => ({\n      name,\n      packed: false,\n      assignedTo: \"Êú™ÂàÜÈÖç\",\n    }));\n  }\n\n  return {\n    ...trip,\n    title: `${trip.fromCity} ‚ûù ${trip.destination}`,\n    date: `${start.getMonth() + 1}/${start.getDate()}/${start.getFullYear()} ~ ${\n      end.getMonth() + 1\n    }/${end.getDate()}/${end.getFullYear()}`,\n    days,\n    items,\n  };\n});\n\n\n      console.log(\"‚úÖ ËΩ¨Êç¢ÂêéÁöÑ packingData:\", converted);\n      setPackingData(converted);\n\n      if (converted.length > 0) {\n        setSelectedTripId(converted[0].id);\n      }\n\n    } catch (err) {\n      console.error(\"‚ùå Ëé∑Âèñ trip Â§±Ë¥•:\", err);\n    }\n  };\n\n  fetchPackingData();\n}, [id]);\n\n\n  // Ëá™Âä®‰øùÂ≠òÂà∞ localStorageÔºàÂèØÈÄâÔºâ\n  useEffect(() => {\n    if (packingData.length > 0) {\n      localStorage.setItem(\"packingData\", JSON.stringify(packingData));\n    }\n  }, [packingData]);\nconsole.log(\"üì¶ packingData:\", packingData);\n\n  // ‰øÆÊîπ packed Áä∂ÊÄÅ\n  const togglePacked = (tripId, index) => {\n    const updated = packingData.map((trip) => {\n      if (trip.id === tripId) {\n        const items = [...trip.items];\n        items[index].packed = !items[index].packed;\n        return { ...trip, items };\n      }\n      return trip;\n    });\n    setPackingData(updated);\n  };\n\n  // Ê∑ªÂä†Êñ∞ item\nconst { PrismaClient } = require(\"../generated/prisma\");\nconst prisma = new PrismaClient();\n\nexports.saveTrip = async (req, res) => {\n  const { userId, fromCity, destination, startDate, endDate, schedule } = req.body;\n\n  try {\n    const newTrip = await prisma.trip.create({\n      data: {\n        userId: Number(userId),\n        fromCity,                      // ‚úÖ Êñ∞Â¢ûÔºöÂá∫ÂèëÂüéÂ∏Ç\n        destination,                  // ‚úÖ Êñ∞Â¢ûÔºöÁõÆÁöÑÂú∞\n        startDate: new Date(startDate),\n        endDate: new Date(endDate),\n        schedule,\n        items: [], // ÂàùÂßãÂåñ items Êï∞ÁªÑ\n      },\n    });\n\n    res.json(newTrip);\n  } catch (err) {\n    console.error(\"‚ùå Failed to save trip:\", err);\n    res.status(500).json({ message: \"Failed to save trip\", error: err.message });\n  }\n};\n\nexports.getTripsByUser = async (req, res) => {\n  const { userId } = req.params;\n  try {\n    const trips = await prisma.trip.findMany({\n      where: { userId: Number(userId) },\n    });\n    res.json(trips);\n  } catch (err) {\n    console.error(\"‚ùå Failed to fetch user trips:\", err);\n    res.status(500).json({ message: \"Failed to fetch trips\", error: err.message });\n  }\n};\n\nexports.deleteTrip = async (req, res) => {\n  const { id } = req.params;\n  try {\n    await prisma.trip.delete({\n      where: { id: Number(id) },\n    });\n    res.json({ message: \"Trip deleted\" });\n  } catch (err) {\n    console.error(\"‚ùå Âà†Èô§Ë°åÁ®ãÂ§±Ë¥•:\", err);\n    res.status(500).json({ error: \"Failed to delete trip\" });\n  }\n};\nexports.updateTrip = async (req, res) => {\n  const { id } = req.params;\n  const { userId, fromCity, destination, startDate, endDate, schedule } = req.body;\n\n  try {\n    const updatedTrip = await prisma.trip.update({\n      where: { id: Number(id) },\n      data: {\n        userId: Number(userId),\n        fromCity,\n        destination,\n        startDate: new Date(startDate),\n        endDate: new Date(endDate),\n        schedule,\n      },\n    });\n\n    res.json(updatedTrip);\n  } catch (err) {\n    console.error(\"‚ùå Failed to update trip:\", err);\n    res.status(500).json({ message: \"Failed to update trip\", error: err.message });\n  }\n};\n\nexports.getTripById = async (req, res) => {\n  const { id } = req.params;\n\n  try {\n    const trip = await prisma.trip.findUnique({\n      where: { id: Number(id) },\n    });\n\n    if (!trip) {\n      return res.status(404).json({ message: \"Trip not found\" });\n    }\n\n    res.json(trip);\n  } catch (err) {\n    console.error(\"‚ùå Ëé∑ÂèñË°åÁ®ãÂ§±Ë¥•:\", err);\n    res.status(500).json({ message: \"ÊúçÂä°Âô®Âá∫Èîô\", error: err.message });\n  }\n};\n\nexports.addItemToTrip = async (req, res) => {\n  const { id } = req.params;\n  const { name, packed = false, assignedTo = \"Êú™ÂàÜÈÖç\" } = req.body;\n\n  try {\n    // ÊâæÂà∞ÂéüÊù•ÁöÑ trip\n    const trip = await prisma.trip.findUnique({\n      where: { id: Number(id) },\n    });\n\n    if (!trip) {\n      return res.status(404).json({ message: \"Trip not found\" });\n    }\n\n    // Â¶ÇÊûú schedule ÊòØÁ©∫ÁöÑÔºåÂàùÂßãÂåñÊàêÁ©∫Êï∞ÁªÑ\n    const schedule = Array.isArray(trip.schedule) ? trip.schedule : [];\n\n    // üëá ÊèíÂÖ•‰∏Ä‰∏™ÈªòËÆ§ÁªìÊûÑÔºà‰Ω†ÂèØ‰ª•Ê†πÊçÆÂÆûÈôÖ‰øÆÊîπÔºâ\n    const newItem = {\n      name,\n      packed,\n      assignedTo,\n    };\n\n    // ÂÅáËÆæ schedule ÊòØÁî±Â§öÂ§©ÁªÑÊàêÁöÑÊï∞ÁªÑÔºåÊàë‰ª¨Êää item Ê∑ªÂä†Âà∞Á¨¨‰∏ÄÂ§©\n    if (schedule.length === 0) {\n      schedule.push({ day: 1, items: [newItem] });\n    } else {\n      // ÈªòËÆ§Ê∑ªÂä†Âà∞Á¨¨‰∏ÄÂ§©ÔºàÊàñ‰Ω†ÂèØ‰ª•ÊâæÂΩìÂâçÊó•ÊúüÂåπÈÖçÔºâ\n      schedule[0].items = Array.isArray(schedule[0].items)\n        ? [...schedule[0].items, newItem]\n        : [newItem];\n    }\n\n    // ‰øùÂ≠òÊõ¥Êñ∞ÂêéÁöÑ trip\n    const updated = await prisma.trip.update({\n      where: { id: Number(id) },\n      data: {\n        schedule,\n      },\n    });\n\n    res.json({ message: \"‚úÖ Ê∑ªÂä†ÊàêÂäü\", trip: updated });\n  } catch (err) {\n    console.error(\"‚ùå Ê∑ªÂä†Áâ©ÂìÅÂ§±Ë¥•:\", err);\n    res.status(500).json({ error: \"Ê∑ªÂä†Â§±Ë¥•\", details: err.message });\n  }\n};\n\n\n  // ‰øÆÊîπÁâ©ÂìÅÁöÑÂΩíÂ±û‰∫∫\n  const updateAssignedTo = (tripId, index, name) => {\n    const updated = packingData.map((trip) => {\n      if (trip.id === tripId) {\n        const items = [...trip.items];\n        items[index].assignedTo = name;\n        return { ...trip, items };\n      }\n      return trip;\n    });\n    setPackingData(updated);\n  };\n\n   const selectedTrip = packingData.find((trip) => trip.id === selectedTripId);\n\n//   if (loading) return <p style={{ padding: \"2rem\" }}>‚è≥ Loading packing list...</p>;\n\n  return (\n    <>\n      <Navbar />\n      <SubNavBar />\n      <div className=\"packing-page\">\n        <div className=\"trip-select\">\n          <label htmlFor=\"tripSelect\">Êü•ÁúãË°åÁ®ãÔºö</label>\n          <select\n            id=\"tripSelect\"\n            value={selectedTripId ?? \"\"}\n            onChange={(e) => setSelectedTripId(Number(e.target.value))}\n          >\n            <option value=\"\">ËØ∑ÈÄâÊã©Ë°åÁ®ã</option>\n            {packingData.map((trip) => (\n              <option key={trip.id} value={trip.id}>\n                {trip.title}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {selectedTrip && (\n          <div className=\"packing-card\">\n            <div className=\"packing-header\">\n              <h3>{selectedTrip.title}</h3>\n              <span className=\"packing-date\">\n                {selectedTrip.date} „Éª{selectedTrip.days}Â§©\n              </span>\n            </div>\n\n            <ul className=\"packing-items\">\n              {selectedTrip.items.map((item, idx) => (\n                <li key={idx} className=\"packing-item\">\n                  <input\n                    type=\"checkbox\"\n                    checked={item.packed}\n                    onChange={() => togglePacked(selectedTrip.id, idx)}\n                  />\n                  <span style={{ textDecoration: item.packed ? \"line-through\" : \"none\" }}>\n                    {item.name}\n                  </span>\n                  <span className=\"assigned-label\">@{item.assignedTo}</span>\n                  <select\n                    className=\"assigned-select\"\n                    value={item.assignedTo}\n                    onChange={(e) =>\n                      updateAssignedTo(selectedTrip.id, idx, e.target.value)\n                    }\n                  >\n                    {[\"Êú™ÂàÜÈÖç\", \"Siyu Jin\", \"Hantao Zhou\"].map((name) => (\n                      <option key={name} value={name}>\n                        {name}\n                      </option>\n                    ))}\n                  </select>\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"add-item-section\">\n              <input\n                type=\"text\"\n                placeholder=\"Ê∑ªÂä†Êñ∞Áâ©ÂìÅ...\"\n                value={newItems[selectedTrip.id] || \"\"}\n                  onChange={(e) =>\n    selectedTrip &&\n    setNewItems({ ...newItems, [selectedTrip.id]: e.target.value })\n                }\n              />\n              <button onClick={() => handleAddItem(selectedTrip.id)}>Ê∑ªÂä†</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}