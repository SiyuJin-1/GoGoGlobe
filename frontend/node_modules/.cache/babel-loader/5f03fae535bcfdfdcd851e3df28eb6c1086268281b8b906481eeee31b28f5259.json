{"ast":null,"code":"var _jsxFileName = \"/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/Splitwise.js\",\n  _s = $RefreshSig$();\n// src/pages/Splitwise.js\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport SubNavBar from \"./SubNavBar\";\nimport \"./Splitwise.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\nexport default function SplitwisePage() {\n  _s();\n  var _currentUser$user;\n  const {\n    id: idFromRoute\n  } = useParams();\n  const [uid, setUid] = useState(null);\n  const [tripData, setTripData] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [memberData, setMemberData] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [userTotals, setUserTotals] = useState({});\n  const [dirty, setDirty] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  // Small helper: fetch JSON and guard against HTML responses\n  const getJSON = async (path, options = {}) => {\n    const res = await fetch(`${API_BASE}${path}`, {\n      credentials: \"include\",\n      ...options\n    });\n    const ct = res.headers.get(\"content-type\") || \"\";\n    if (!ct.includes(\"application/json\")) {\n      const body = await res.text();\n      throw new Error(`Expected JSON, got ${ct}: ${body.slice(0, 120)}…`);\n    }\n    if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n    return res.json();\n  };\n\n  // Resolve userId: route param -> localStorage -> /api/auth/me\n  useEffect(() => {\n    (async () => {\n      let id = idFromRoute || localStorage.getItem(\"userId\");\n      if (!id) {\n        try {\n          var _me$user;\n          const me = await getJSON(\"/api/auth/me\");\n          if (me !== null && me !== void 0 && (_me$user = me.user) !== null && _me$user !== void 0 && _me$user.id) {\n            id = String(me.user.id);\n            localStorage.setItem(\"userId\", id);\n          }\n        } catch {}\n      }\n      if (id) setUid(Number(id));\n    })();\n  }, [idFromRoute]);\n\n  // Fetch trips for current user\n  useEffect(() => {\n    if (uid == null) return;\n    (async () => {\n      try {\n        const trips = await getJSON(`/api/trip/user/${uid}`);\n        if (Array.isArray(trips) && trips.length > 0) {\n          setTripData(trips);\n          setSelectedTripId(trips[0].id);\n        } else {\n          setTripData([]);\n          setSelectedTripId(null);\n        }\n      } catch (err) {\n        console.error(\"❌ Failed to fetch trips:\", err);\n        setTripData([]);\n      }\n    })();\n  }, [uid]);\n\n  // Fetch members & expenses for the selected trip\n  useEffect(() => {\n    if (!selectedTripId) return;\n    (async () => {\n      try {\n        const members = await getJSON(`/api/members?tripId=${selectedTripId}`);\n        setMemberData(Array.isArray(members) ? members : []);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch members:\", err);\n        setMemberData([]);\n      }\n      try {\n        const data = await getJSON(`/api/expenses?tripId=${selectedTripId}`);\n        const list = Array.isArray(data) ? data : [];\n        setExpenses(list);\n        calculateTotals(list);\n        setDirty(false);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch expenses:\", err);\n        setExpenses([]);\n        setUserTotals({});\n        setDirty(false);\n      }\n    })();\n  }, [selectedTripId]);\n\n  // Build per-user totals\n  const calculateTotals = data => {\n    const totals = {};\n    for (const item of data) {\n      const pid = Number(item.payerId);\n      if (!Number.isFinite(pid)) continue;\n      if (!totals[pid]) totals[pid] = 0;\n      totals[pid] += parseFloat(item.amount) || 0;\n    }\n    setUserTotals(totals);\n  };\n\n  // Compute settlement: who pays whom\n  const calculateBalances = () => {\n    if (!memberData.length) return [];\n    const total = Object.values(userTotals).reduce((s, v) => s + v, 0);\n    const avg = memberData.length ? total / memberData.length : 0;\n    const balances = memberData.map(m => ({\n      id: m.user.id,\n      email: m.user.email,\n      balance: (userTotals[m.user.id] || 0) - avg\n    }));\n    const payables = [];\n    const debtors = balances.filter(b => b.balance < -0.01).sort((a, b) => a.balance - b.balance);\n    const creditors = balances.filter(b => b.balance > 0.01).sort((a, b) => b.balance - a.balance);\n    let i = 0,\n      j = 0;\n    while (i < debtors.length && j < creditors.length) {\n      const debtor = debtors[i];\n      const creditor = creditors[j];\n      const amount = Math.min(-debtor.balance, creditor.balance);\n      payables.push({\n        from: debtor.email,\n        to: creditor.email,\n        amount: amount.toFixed(2)\n      });\n      debtor.balance += amount;\n      creditor.balance -= amount;\n      if (Math.abs(debtor.balance) < 0.01) i++;\n      if (Math.abs(creditor.balance) < 0.01) j++;\n    }\n    return payables;\n  };\n\n  // Is a row ready to save?\n  const isCompleteRow = e => String(e.note || \"\").trim().length > 0 && Number.isFinite(Number(e.amount)) && Number(e.amount) > 0 && Number.isInteger(Number(e.payerId)) && Number(e.payerId) > 0;\n\n  // UI actions\n  const handleAddExpense = () => {\n    if (!selectedTripId) {\n      alert(\"Please select a trip first.\");\n      return;\n    }\n    setExpenses(prev => [...prev, {\n      note: \"\",\n      amount: \"\",\n      payerId: \"\"\n    }]);\n    setDirty(true);\n  };\n  const handleChange = (index, field, value) => {\n    const updated = [...expenses];\n    updated[index][field] = field === \"payerId\" ? value === \"\" ? \"\" : Number(value) : value;\n    setExpenses(updated);\n    setDirty(true);\n  };\n  const removeRow = idx => {\n    const updated = expenses.filter((_, i) => i !== idx);\n    setExpenses(updated);\n    setDirty(true);\n  };\n  const handleSave = async () => {\n    const payload = expenses.filter(isCompleteRow);\n    if (payload.length === 0) {\n      alert(\"No complete expense rows to save.\");\n      return;\n    }\n    try {\n      setSaving(true);\n      const res = await fetch(`${API_BASE}/api/expenses/save`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tripId: selectedTripId,\n          expenses: payload.map(e => ({\n            note: String(e.note || \"\").trim(),\n            amount: Number(e.amount),\n            payerId: Number(e.payerId)\n          }))\n        })\n      });\n      if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n      calculateTotals(expenses);\n      setDirty(false);\n      alert(\"✅ Saved\");\n    } catch (err) {\n      console.error(\"❌ Save failed:\", err);\n      alert(\"❌ Save failed. Please check amount and payer.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n  const balances = calculateBalances();\n  const currentUser = memberData.find(m => m.user.id === uid);\n  const currentUserEmail = (currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$user = currentUser.user) === null || _currentUser$user === void 0 ? void 0 : _currentUser$user.email) || \"\";\n  const currentUserTotal = userTotals[uid] || 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-selector center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tripSelect\",\n        children: \"Select Trip:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"tripSelect\",\n        value: selectedTripId !== null && selectedTripId !== void 0 ? selectedTripId : \"\",\n        onChange: e => setSelectedTripId(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a trip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), tripData.map(trip => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: trip.id,\n          children: [trip.fromCity, \" \\u2192 \", trip.destination]\n        }, trip.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splitwise-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splitwise-card left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Total Spent per Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), memberData.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-finance-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: m.user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount-positive\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: [\"$\", (userTotals[m.user.id] || 0).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, m.user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)), memberData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-finance-entry\",\n          style: {\n            marginTop: \"0.8rem\",\n            fontWeight: \"bold\",\n            borderTop: \"1px solid #eee\",\n            paddingTop: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Average per Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", (Object.values(userTotals).reduce((sum, val) => sum + val, 0) / memberData.length).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avg-spending-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: \"2rem\"\n          },\n          children: \"Who Pays Whom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), memberData.map(member => {\n          const from = member.user.email;\n          const userPayments = balances.filter(b => b.from === from);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-balance-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [from, \" should pay:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), userPayments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-payment\",\n              children: \"No payments needed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this) : userPayments.map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-finance-entry\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u279C \", p.to]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount-negative\",\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: [\"$\", p.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 21\n            }, this))]\n          }, from, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avg-spending-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: \"2rem\"\n          },\n          children: \"Your Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-finance-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginTop: \"1.2rem\",\n              fontWeight: \"bold\"\n            },\n            children: \"Your total spending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount-positive\",\n            style: {\n              marginTop: \"1.2rem\",\n              fontWeight: \"bold\"\n            },\n            children: [\"$\", currentUserTotal.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-finance-entry\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginTop: \"1.2rem\",\n              fontWeight: \"bold\"\n            },\n            children: \"You should pay:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), balances.filter(b => b.from === currentUserEmail).length > 0 ? balances.filter(b => b.from === currentUserEmail).map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-finance-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"You \\u279C \", p.to]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"amount-negative\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: [\"$\", p.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-payment\",\n          children: \"No payments needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), balances.filter(b => b.to === currentUserEmail).length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              marginTop: \"1.2rem\",\n              fontWeight: \"bold\"\n            },\n            children: \"Others owe you:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), balances.filter(b => b.to === currentUserEmail).map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-finance-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [p.from, \" \\u279C You\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"amount-positive\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: [\"$\", p.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splitwise-card right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), expenses.map((item, index) => {\n          var _item$payerId;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"budget-item budget-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item.note,\n              onChange: e => handleChange(index, \"note\", e.target.value),\n              placeholder: \"Item name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: item.amount,\n              onChange: e => handleChange(index, \"amount\", e.target.value),\n              placeholder: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: item.payerId === \"\" ? \"\" : (_item$payerId = item.payerId) !== null && _item$payerId !== void 0 ? _item$payerId : \"\",\n              onChange: e => handleChange(index, \"payerId\", e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select payer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), memberData.map(member => {\n                var _member$user;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: member.user.id,\n                  children: ((_member$user = member.user) === null || _member$user === void 0 ? void 0 : _member$user.email) || \"Unknown user\"\n                }, member.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"icon-btn trash\",\n              \"aria-label\": \"Delete\",\n              title: \"Delete this row\",\n              onClick: () => removeRow(index),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                width: \"20\",\n                height: \"20\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"1.8\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                children: [/*#__PURE__*/_jsxDEV(\"polyline\", {\n                  points: \"3 6 5 6 21 6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 6l-2 14a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2L5 6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M10 11v6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M14 11v6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M9 6V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            onClick: handleAddExpense,\n            children: \"\\u2795 Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            onClick: handleSave,\n            disabled: saving || !dirty || !expenses.some(isCompleteRow),\n            style: {\n              opacity: saving || !dirty ? 0.6 : 1\n            },\n            children: saving ? \"Saving…\" : \"💾 Save Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SplitwisePage, \"eOGnbh7Z8WR+z0JRltYf6XEmUz0=\", false, function () {\n  return [useParams];\n});\n_c = SplitwisePage;\nvar _c;\n$RefreshReg$(_c, \"SplitwisePage\");","map":{"version":3,"names":["useEffect","useState","useParams","Navbar","SubNavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","SplitwisePage","_s","_currentUser$user","id","idFromRoute","uid","setUid","tripData","setTripData","selectedTripId","setSelectedTripId","memberData","setMemberData","expenses","setExpenses","userTotals","setUserTotals","dirty","setDirty","saving","setSaving","getJSON","path","options","res","fetch","credentials","ct","headers","get","includes","body","text","Error","slice","ok","catch","status","json","localStorage","getItem","_me$user","me","user","String","setItem","Number","trips","Array","isArray","length","err","console","error","members","data","list","calculateTotals","totals","item","pid","payerId","isFinite","parseFloat","amount","calculateBalances","total","Object","values","reduce","s","v","avg","balances","map","m","email","balance","payables","debtors","filter","b","sort","a","creditors","i","j","debtor","creditor","Math","min","push","from","to","toFixed","abs","isCompleteRow","e","note","trim","isInteger","handleAddExpense","alert","prev","handleChange","index","field","value","updated","removeRow","idx","_","handleSave","payload","method","JSON","stringify","tripId","currentUser","find","currentUserEmail","currentUserTotal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","onChange","target","trip","fromCity","destination","style","fontWeight","marginTop","borderTop","paddingTop","sum","val","member","userPayments","p","_item$payerId","placeholder","type","step","_member$user","title","onClick","viewBox","width","height","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","disabled","some","opacity","_c","$RefreshReg$"],"sources":["/Users/jsy/Desktop/ai-travel-app/frontend/src/pages/Splitwise.js"],"sourcesContent":["// src/pages/Splitwise.js\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport SubNavBar from \"./SubNavBar\";\nimport \"./Splitwise.css\";\n\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:3001\";\n\nexport default function SplitwisePage() {\n  const { id: idFromRoute } = useParams();\n\n  const [uid, setUid] = useState(null);\n  const [tripData, setTripData] = useState([]);\n  const [selectedTripId, setSelectedTripId] = useState(null);\n  const [memberData, setMemberData] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [userTotals, setUserTotals] = useState({});\n  const [dirty, setDirty] = useState(false);\n  const [saving, setSaving] = useState(false);\n\n  // Small helper: fetch JSON and guard against HTML responses\n  const getJSON = async (path, options = {}) => {\n    const res = await fetch(`${API_BASE}${path}`, {\n      credentials: \"include\",\n      ...options,\n    });\n    const ct = res.headers.get(\"content-type\") || \"\";\n    if (!ct.includes(\"application/json\")) {\n      const body = await res.text();\n      throw new Error(`Expected JSON, got ${ct}: ${body.slice(0, 120)}…`);\n    }\n    if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n    return res.json();\n  };\n\n  // Resolve userId: route param -> localStorage -> /api/auth/me\n  useEffect(() => {\n    (async () => {\n      let id = idFromRoute || localStorage.getItem(\"userId\");\n      if (!id) {\n        try {\n          const me = await getJSON(\"/api/auth/me\");\n          if (me?.user?.id) {\n            id = String(me.user.id);\n            localStorage.setItem(\"userId\", id);\n          }\n        } catch {}\n      }\n      if (id) setUid(Number(id));\n    })();\n  }, [idFromRoute]);\n\n  // Fetch trips for current user\n  useEffect(() => {\n    if (uid == null) return;\n    (async () => {\n      try {\n        const trips = await getJSON(`/api/trip/user/${uid}`);\n        if (Array.isArray(trips) && trips.length > 0) {\n          setTripData(trips);\n          setSelectedTripId(trips[0].id);\n        } else {\n          setTripData([]);\n          setSelectedTripId(null);\n        }\n      } catch (err) {\n        console.error(\"❌ Failed to fetch trips:\", err);\n        setTripData([]);\n      }\n    })();\n  }, [uid]);\n\n  // Fetch members & expenses for the selected trip\n  useEffect(() => {\n    if (!selectedTripId) return;\n\n    (async () => {\n      try {\n        const members = await getJSON(`/api/members?tripId=${selectedTripId}`);\n        setMemberData(Array.isArray(members) ? members : []);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch members:\", err);\n        setMemberData([]);\n      }\n\n      try {\n        const data = await getJSON(`/api/expenses?tripId=${selectedTripId}`);\n        const list = Array.isArray(data) ? data : [];\n        setExpenses(list);\n        calculateTotals(list);\n        setDirty(false);\n      } catch (err) {\n        console.error(\"❌ Failed to fetch expenses:\", err);\n        setExpenses([]);\n        setUserTotals({});\n        setDirty(false);\n      }\n    })();\n  }, [selectedTripId]);\n\n  // Build per-user totals\n  const calculateTotals = (data) => {\n    const totals = {};\n    for (const item of data) {\n      const pid = Number(item.payerId);\n      if (!Number.isFinite(pid)) continue;\n      if (!totals[pid]) totals[pid] = 0;\n      totals[pid] += parseFloat(item.amount) || 0;\n    }\n    setUserTotals(totals);\n  };\n\n  // Compute settlement: who pays whom\n  const calculateBalances = () => {\n    if (!memberData.length) return [];\n    const total = Object.values(userTotals).reduce((s, v) => s + v, 0);\n    const avg = memberData.length ? total / memberData.length : 0;\n\n    const balances = memberData.map((m) => ({\n      id: m.user.id,\n      email: m.user.email,\n      balance: (userTotals[m.user.id] || 0) - avg,\n    }));\n\n    const payables = [];\n    const debtors = balances.filter((b) => b.balance < -0.01).sort((a, b) => a.balance - b.balance);\n    const creditors = balances.filter((b) => b.balance > 0.01).sort((a, b) => b.balance - a.balance);\n\n    let i = 0, j = 0;\n    while (i < debtors.length && j < creditors.length) {\n      const debtor = debtors[i];\n      const creditor = creditors[j];\n      const amount = Math.min(-debtor.balance, creditor.balance);\n\n      payables.push({ from: debtor.email, to: creditor.email, amount: amount.toFixed(2) });\n\n      debtor.balance += amount;\n      creditor.balance -= amount;\n\n      if (Math.abs(debtor.balance) < 0.01) i++;\n      if (Math.abs(creditor.balance) < 0.01) j++;\n    }\n    return payables;\n  };\n\n  // Is a row ready to save?\n  const isCompleteRow = (e) =>\n    String(e.note || \"\").trim().length > 0 &&\n    Number.isFinite(Number(e.amount)) &&\n    Number(e.amount) > 0 &&\n    Number.isInteger(Number(e.payerId)) &&\n    Number(e.payerId) > 0;\n\n  // UI actions\n  const handleAddExpense = () => {\n    if (!selectedTripId) {\n      alert(\"Please select a trip first.\");\n      return;\n    }\n    setExpenses((prev) => [...prev, { note: \"\", amount: \"\", payerId: \"\" }]);\n    setDirty(true);\n  };\n\n  const handleChange = (index, field, value) => {\n    const updated = [...expenses];\n    updated[index][field] = field === \"payerId\" ? (value === \"\" ? \"\" : Number(value)) : value;\n    setExpenses(updated);\n    setDirty(true);\n  };\n\n  const removeRow = (idx) => {\n    const updated = expenses.filter((_, i) => i !== idx);\n    setExpenses(updated);\n    setDirty(true);\n  };\n\n  const handleSave = async () => {\n    const payload = expenses.filter(isCompleteRow);\n    if (payload.length === 0) {\n      alert(\"No complete expense rows to save.\");\n      return;\n    }\n    try {\n      setSaving(true);\n      const res = await fetch(`${API_BASE}/api/expenses/save`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          tripId: selectedTripId,\n          expenses: payload.map((e) => ({\n            note: String(e.note || \"\").trim(),\n            amount: Number(e.amount),\n            payerId: Number(e.payerId),\n          })),\n        }),\n      });\n      if (!res.ok) throw new Error(await res.text().catch(() => `HTTP ${res.status}`));\n      calculateTotals(expenses);\n      setDirty(false);\n      alert(\"✅ Saved\");\n    } catch (err) {\n      console.error(\"❌ Save failed:\", err);\n      alert(\"❌ Save failed. Please check amount and payer.\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const balances = calculateBalances();\n  const currentUser = memberData.find((m) => m.user.id === uid);\n  const currentUserEmail = currentUser?.user?.email || \"\";\n  const currentUserTotal = userTotals[uid] || 0;\n\n  return (\n    <>\n      <Navbar />\n      <SubNavBar />\n\n      <div className=\"trip-selector center\">\n        <label htmlFor=\"tripSelect\">Select Trip:</label>\n        <select\n          id=\"tripSelect\"\n          value={selectedTripId ?? \"\"}\n          onChange={(e) => setSelectedTripId(Number(e.target.value))}\n        >\n          <option value=\"\">Select a trip</option>\n          {tripData.map((trip) => (\n            <option key={trip.id} value={trip.id}>\n              {trip.fromCity} → {trip.destination}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"splitwise-grid\">\n        {/* Left: summary */}\n        <div className=\"splitwise-card left\">\n          <h4>Total Spent per Person</h4>\n          {memberData.map((m) => (\n            <div className=\"user-finance-entry\" key={m.user.id}>\n              <span>{m.user.email}</span>\n              <span className=\"amount-positive\" style={{ fontWeight: \"bold\" }}>\n                ${(userTotals[m.user.id] || 0).toFixed(2)}\n              </span>\n            </div>\n          ))}\n\n          {memberData.length > 0 && (\n            <div\n              className=\"user-finance-entry\"\n              style={{ marginTop: \"0.8rem\", fontWeight: \"bold\", borderTop: \"1px solid #eee\", paddingTop: \"0.5rem\" }}\n            >\n              <span>Average per Person</span>\n              <span>\n                $\n                {(\n                  Object.values(userTotals).reduce((sum, val) => sum + val, 0) /\n                  memberData.length\n                ).toFixed(2)}\n              </span>\n            </div>\n          )}\n\n          <div className=\"avg-spending-separator\"></div>\n\n          <h4 style={{ marginTop: \"2rem\" }}>Who Pays Whom</h4>\n          {memberData.map((member) => {\n            const from = member.user.email;\n            const userPayments = balances.filter((b) => b.from === from);\n            return (\n              <div key={from} className=\"user-balance-block\">\n                <strong>{from} should pay:</strong>\n                {userPayments.length === 0 ? (\n                  <div className=\"no-payment\">No payments needed</div>\n                ) : (\n                  userPayments.map((p, idx) => (\n                    <div key={idx} className=\"user-finance-entry\">\n                      <span>➜ {p.to}</span>\n                      <span className=\"amount-negative\" style={{ fontWeight: \"bold\" }}>\n                        ${p.amount}\n                      </span>\n                    </div>\n                  ))\n                )}\n              </div>\n            );\n          })}\n\n          <div className=\"avg-spending-separator\"></div>\n\n          <h4 style={{ marginTop: \"2rem\" }}>Your Summary</h4>\n          <div className=\"user-finance-entry\">\n            <span style={{ marginTop: \"1.2rem\", fontWeight: \"bold\" }}>Your total spending</span>\n            <span className=\"amount-positive\" style={{ marginTop: \"1.2rem\", fontWeight: \"bold\" }}>\n              ${currentUserTotal.toFixed(2)}\n            </span>\n          </div>\n\n          <div className=\"user-finance-entry\">\n            <span style={{ marginTop: \"1.2rem\", fontWeight: \"bold\" }}>You should pay:</span>\n          </div>\n\n          {balances.filter((b) => b.from === currentUserEmail).length > 0 ? (\n            balances\n              .filter((b) => b.from === currentUserEmail)\n              .map((p, idx) => (\n                <div className=\"user-finance-entry\" key={idx}>\n                  <span>You ➜ {p.to}</span>\n                  <span className=\"amount-negative\" style={{ fontWeight: \"bold\" }}>\n                    ${p.amount}\n                  </span>\n                </div>\n              ))\n          ) : (\n            <div className=\"no-payment\">No payments needed</div>\n          )}\n\n          {balances.filter((b) => b.to === currentUserEmail).length > 0 && (\n            <>\n              <h5 style={{ marginTop: \"1.2rem\", fontWeight: \"bold\" }}>Others owe you:</h5>\n              {balances\n                .filter((b) => b.to === currentUserEmail)\n                .map((p, idx) => (\n                  <div className=\"user-finance-entry\" key={idx}>\n                    <span>{p.from} ➜ You</span>\n                    <span className=\"amount-positive\" style={{ fontWeight: \"bold\" }}>\n                      ${p.amount}\n                    </span>\n                  </div>\n                ))}\n            </>\n          )}\n        </div>\n\n        {/* Right: editor */}\n        <div className=\"splitwise-card right\">\n          <h3>Expenses</h3>\n\n          {expenses.map((item, index) => (\n            <div className=\"budget-item budget-row\" key={index}>\n              <input\n                value={item.note}\n                onChange={(e) => handleChange(index, \"note\", e.target.value)}\n                placeholder=\"Item name\"\n              />\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={item.amount}\n                onChange={(e) => handleChange(index, \"amount\", e.target.value)}\n                placeholder=\"Amount\"\n              />\n              <select\n                value={item.payerId === \"\" ? \"\" : item.payerId ?? \"\"}\n                onChange={(e) => handleChange(index, \"payerId\", e.target.value)}\n              >\n                <option value=\"\">Select payer</option>\n                {memberData.map((member) => (\n                  <option key={member.id} value={member.user.id}>\n                    {member.user?.email || \"Unknown user\"}\n                  </option>\n                ))}\n              </select>\n\n              <button\n                type=\"button\"\n                className=\"icon-btn trash\"\n                aria-label=\"Delete\"\n                title=\"Delete this row\"\n                onClick={() => removeRow(index)}\n              >\n                {/* Trash icon */}\n                <svg viewBox=\"0 0 24 24\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polyline points=\"3 6 5 6 21 6\" />\n                  <path d=\"M19 6l-2 14a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2L5 6\" />\n                  <path d=\"M10 11v6\" />\n                  <path d=\"M14 11v6\" />\n                  <path d=\"M9 6V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v2\" />\n                </svg>\n              </button>\n            </div>\n          ))}\n\n          {/* Bottom actions */}\n          <div className=\"actions-bottom\">\n            <button className=\"add-btn\" onClick={handleAddExpense}>\n              ➕ Add Expense\n            </button>\n            <button\n              className=\"add-btn\"\n              onClick={handleSave}\n              disabled={saving || !dirty || !expenses.some(isCompleteRow)}\n              style={{ opacity: saving || !dirty ? 0.6 : 1 }}\n            >\n              {saving ? \"Saving…\" : \"💾 Save Expenses\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}