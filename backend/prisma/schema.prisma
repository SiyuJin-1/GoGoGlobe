// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String?
  trips         Trip[]    @relation("UserTrips")
  members       Member[]
  paidExpenses  Expense[] @relation("PaidExpenses")  // Expense.payer
  splits        Split[]   @relation("UserSplits")     // Split.user
}

model Trip {
  id        Int      @id @default(autoincrement())
  userId    Int
  fromCity  String
  destination String
  startDate DateTime
  endDate   DateTime
  schedule  Json?
  items     Item[]
  members    Member[]
  accommodations Accommodation[]
  expenses        Expense[]     // Expense.trip
  splits          Split[]       @relation("TripSplits")   // Split.trip
  photos    Photo[]
  user      User     @relation("UserTrips", fields: [userId], references: [id])
}

model Item {
  id         Int      @id @default(autoincrement())
  name       String
  packed     Boolean
  assignedTo String
  trip       Trip     @relation(fields: [tripId], references: [id])
  tripId     Int
}

model Member {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int

  trip      Trip    @relation(fields: [tripId], references: [id])
  tripId    Int

  role      String  @default("Member")
  online    Boolean @default(false)
  tasks     Int     @default(0)
}

model Accommodation {
  id          Int      @id @default(autoincrement())
  tripId      Int
  name        String            // 住宿名称
  address     String            // 住宿地址
  checkIn     DateTime          // 入住时间
  checkOut    DateTime          // 退房时间
  imageUrl    String?           // 住宿图片（可选）
  bookingUrl  String? @db.Text            // 跳转链接（可选）

  trip        Trip     @relation(fields: [tripId], references: [id])

  @@map("accommodations")       // （可选）数据库表名自定义
}

model Expense {
  id        Int      @id @default(autoincrement())
  trip      Trip     @relation(fields: [tripId], references: [id])
  tripId    Int
  payer     User     @relation("PaidExpenses", fields: [payerId], references: [id])
  payerId   Int
  amount    Float
  note      String?
  createdAt DateTime @default(now())

  splits    Split[]
}

model Split {
  id         Int      @id @default(autoincrement())
  trip     Trip @relation("TripSplits", fields: [tripId], references: [id])
  tripId   Int

  expense    Expense  @relation(fields: [expenseId], references: [id])
  expenseId  Int

  user       User     @relation("UserSplits", fields: [userId], references: [id])
  userId     Int

  amount     Float
}


model Photo {
  id       Int      @id @default(autoincrement())
  tripId   Int
  imageUrl String
  gps      String?
  trip     Trip     @relation(fields: [tripId], references: [id])
}